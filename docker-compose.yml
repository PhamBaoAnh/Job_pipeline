version: "3.8"

services:
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - spark-network
    restart: unless-stopped

  airflow-init:
    build:
      context: .
    depends_on:
      - postgres
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./spark:/opt/airflow/spark
      - ./spark/src:/opt/spark-jobs
      - ./jars:/opt/custom-jars
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    networks:
      - spark-network
    restart: "no"

  airflow-webserver:
    build:
      context: .
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__WEBSERVER__SECRET_KEY: my_super_secret_key
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'True'
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      PYTHONPATH: /opt/airflow:/opt/spark-jobs
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./spark:/opt/airflow/spark
      - ./spark/src:/opt/spark-jobs
      - ./jars:/opt/custom-jars
    command: webserver
    networks:
      - spark-network
    restart: unless-stopped

  airflow-scheduler:
    build:
      context: .
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: my_super_secret_key
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      PYTHONPATH: /opt/airflow:/opt/spark-jobs
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./data:/opt/data
      - ./spark:/opt/airflow/spark
      - ./spark/src:/opt/spark-jobs
      - ./jars:/opt/custom-jars
    command: scheduler
    networks:
      - spark-network
    restart: unless-stopped

  spark-master:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-master
    hostname: spark-master
    environment:
      SPARK_MODE: master
    ports:
      - "7077:7077"
      - "8081:8080"
    volumes:
      - ./spark/src:/opt/spark-jobs
      - ./jars:/opt/custom-jars
    networks:
      - spark-network
    restart: unless-stopped

  spark-worker:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-worker
    hostname: spark-worker
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 4g
      SPARK_WORKER_WEBUI_PORT: 8082
    ports:
      - "8082:8082"
    volumes:
      - ./spark/src:/opt/spark-jobs
      - ./jars:/opt/custom-jars
    networks:
      - spark-network
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - ./minio/data:/data
    ports:
      - "9000:9000"  
      - "9001:9001"  
    networks:
      - spark-network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - spark-network
    restart: unless-stopped

  superset:
    build:
      context: ./superset_home
      dockerfile: dockerfile
    container_name: superset
    depends_on:
      - postgres
      - redis
    environment:
      SUPERSET_SECRET_KEY: "thisISaSECRET_1234"
      SUPERSET_DATABASE_URI: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8088:8088"
    volumes:
      - ./superset_home:/app/superset_home
    command: >
      bash -c "
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@example.com --password admin &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "
    networks:
      - spark-network
    restart: unless-stopped


volumes:
  postgres-db-volume:
  superset_home:

networks:
  spark-network:
